name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
      # Rename after branch change.
      - master
      # Include all release branches.
      - '[0-9]+.[0-9]+'
  pull_request:
    # Run workflow whenever a PR is opened, updated (synchronized), or marked ready for review.
    types: [ opened, synchronize, ready_for_review ]

jobs:

  lint-js:
    name: 'Lint: JS'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Configure npm cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Node dependencies
        run: npm ci && cd app && npm ci && cd -
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          CI: true

      - name: Detect coding standard violations
        run: npm run lint

  unit-test-js:
    name: 'Unit test: JS'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Configure npm cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install Node dependencies
        run: npm ci && cd app && npm ci && cd -
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: true
          CI: true

      - name: Run unit tests (with coverage)
        run: npm run test:coveralls
        env:
          repo_token: ${COVERALLS_REPO_TOKEN}
