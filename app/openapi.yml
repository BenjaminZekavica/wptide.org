openapi: 3.0.0
info:
  version: 1.0.0
  title: Tide API
  description: >-
    Generates [Tide](http://wptide.org) audit reports for WordPress.org plugins and themes.
  contact:
    email: technology@xwp.co
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
servers:
  - url: /api/v1
paths:
  /:
    get:
      summary: API Schema
      description: >-
        Returns the API schema in the [OpenAPI
        v3](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md)
        Specification (OAS) format.
      operationId: schema
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: object
  '/audit/wordpress/{type}/{slug}/{version}':
    get:
      summary: Get Audit
      description: Get a WordPress.org theme or plugin audit with a project type, slug and version
      operationId: getAudit
      parameters:
        - in: path
          name: type
          description: The WordPress.org project type. Valid options are theme or plugin
          required: true
          schema:
            type: string
            enum:
              - plugin
              - theme
        - in: path
          name: slug
          description: The WordPress.org project slug
          required: true
          schema:
            type: string
        - in: path
          name: version
          description: The WordPress.org project version
          required: true
          schema:
            type: string
        - in: query
          name: reports
          description: Include audit reports in the response. Valid options are all, lighthouse, or phpcs_phpcompatibilitywp
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - all
                - lighthouse
                - phpcs_phpcompatibilitywp
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audit'
        404:
          description: Audit not found.
  '/report/{id}':
    get:
      summary: Get Report
      description: Get an Audit Report by id
      operationId: getReport
      parameters:
        - in: path
          name: id
          description: The Report id
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        404:
          description: Report not found
components:
  schemas:
    Audit:
      type: object
    Report:
      type: object
